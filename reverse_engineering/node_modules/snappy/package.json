{
  "_args": [
    [
      {
        "raw": "snappy@^6.1.1",
        "scope": null,
        "escapedName": "snappy",
        "name": "snappy",
        "rawSpec": "^6.1.1",
        "spec": ">=6.1.1 <7.0.0",
        "type": "range"
      },
      "/home/eduard/.hackolade/plugins/Link to Avro/reverse_engineering"
    ]
  ],
  "_from": "snappy@^6.1.1",
  "_hasShrinkwrap": false,
  "_id": "snappy@6.1.1",
  "_location": "/snappy",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/snappy_6.1.1_1537442680213_0.6799701429772615"
  },
  "_npmUser": {
    "name": "kesla",
    "email": "david.bjorklund@gmail.com"
  },
  "_npmVersion": "6.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "snappy@^6.1.1",
    "scope": null,
    "escapedName": "snappy",
    "name": "snappy",
    "rawSpec": "^6.1.1",
    "spec": ">=6.1.1 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/snappy/-/snappy-6.1.1.tgz",
  "_shasum": "81c4f909d0470a1345ddb67cf62012772bf7ddcd",
  "_shrinkwrap": null,
  "_spec": "snappy@^6.1.1",
  "_where": "/home/eduard/.hackolade/plugins/Link to Avro/reverse_engineering",
  "author": {
    "name": "David Björklund",
    "email": "david.bjorklund@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/kesla/node-snappy/issues"
  },
  "dependencies": {
    "bindings": "^1.3.0",
    "nan": "^2.11.0",
    "prebuild-install": "^5.1.0"
  },
  "description": "Nodejs bindings to Google's Snappy compression library",
  "devDependencies": {
    "ava": "^0.25.0",
    "bluebird": "^3.3.4",
    "nyc": "^11.1.0",
    "prebuild": "^8.0.1",
    "prebuild-ci": "^2.2.3",
    "semistandard": "^11.0.0",
    "snazzy": "^7.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-QTv+NJUVWfDMq1edGhmIgn/8TI3Pc+G2sxHOoV8NU0gDMeHaYgnyhIq/U6W+mv6wGmbdhq+bRyXggIoDUSjQng==",
    "shasum": "81c4f909d0470a1345ddb67cf62012772bf7ddcd",
    "tarball": "https://registry.npmjs.org/snappy/-/snappy-6.1.1.tgz",
    "fileCount": 69,
    "unpackedSize": 3311976,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbo4N5CRA9TVsSAnZWagAA2lEP/0n5qwXgu7qv2Li3Ac8H\nMecxPxK7ma9+vV6d9wducAHFfTLRmm3zJufTgBqpR8tZz5RaxekOlPaeOI+c\nbNcR71UYM3jZfzQUdr/88J3dWRgW1QQGDPwxRDK9+8b3tbGsBZ1RFEVC/Sr6\nHaRZADo1yTZh9VknO81KJIX8oBWFv4H7ExwxLdnRongOEp17Xo/P6qorv8Eo\nYHnt/C/53ECbt684QWhXsJ8Nt6kXBtgvSy+OvKHNEjmJJgFkwuj4W4tQaZ1H\nCB/00dUvykecBHNsse6HOnNU+quB8D1OpyQM4nYVWD2Hx8+BPgSq2nXSZmBf\nk6wBTN+2kLkO3ctrBnWt0LjMez85BtU/JCKMmvSrSxHtj3gQsRSsWnQONrFJ\n+80DKZrg7MY9muRp9DEJSsdZvmvNEU6+YlSUEQuU64qz3vB1574wNa9Iy+Zm\nf3n3SrZXrBznf2uyx9QPFBD426k13re7k/EkM0dYKMR/iq4CHT5xrrumW1sc\nN7OJCXXhV5LGSGJqwNfMYHJNf1AiNrz0lwRDNdqx10ffC4uEMHjeo4lyFWE1\n6o7swW669u6j7SSHEqidoK+enQIEyQ+VVvRpWUbI0yvO2/vQMcBJ+y1P6wY1\nIiaHYGSJw3EQU8lP8tb4aZax/IUa/th/LBV9Nn9GXb2yfYaeKBbuVXg0KnNn\njM7g\r\n=pmed\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "66856284715f203f088339adb7961c289aaedcae",
  "gypfile": true,
  "homepage": "https://github.com/kesla/node-snappy",
  "license": "MIT",
  "main": "snappy.js",
  "maintainers": [
    {
      "name": "kesla",
      "email": "david.bjorklund@gmail.com"
    }
  ],
  "name": "snappy",
  "optionalDependencies": {},
  "readme": "# snappy [![Linux Status](https://img.shields.io/travis/kesla/node-snappy.svg?label=linux)](https://travis-ci.org/kesla/node-snappy)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fkesla%2Fnode-snappy.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fkesla%2Fnode-snappy?ref=badge_shield)\n\nNodejs bindings to the [snappy](https://github.com/google/snappy) compression library\n\n[![NPM](https://nodei.co/npm/snappy.png?downloads&stars)](https://nodei.co/npm/snappy/)\n\n[![NPM](https://nodei.co/npm-dl/snappy.png)](https://nodei.co/npm/snappy/)\n\n\n## Installation\n\n```bash\nnpm install snappy\n```\n\n## Example\n\n### Input\n\n```javascript\nvar snappy = require('snappy')\n\nsnappy.compress('beep boop', function (err, compressed) {\n  console.log('compressed is a Buffer', compressed)\n  // return it as a string\n  snappy.uncompress(compressed, { asBuffer: false }, function (err, original) {\n    console.log('the original String', original)\n  })\n})\n```\n\n### Output\n\n```bash\ncompressed is a Buffer <SlowBuffer 09 20 62 65 65 70 20 62 6f 6f 70>\nthe original String beep boop\n```\n\n## API\n\n### snappy.compress(input, callback)\n\nCompress `input`, which can be a `Buffer` or a `String`.\n\nThe `callback` function will be called with a single `error` if the operation failed for any reason. If successful the first argument will be `null` and the second argument will be the `value` as a ``Buffer`.\n\n### snappy.compressSync(input)\n\nThe synchronous version of `snappy.compress`, returns the compressed value.\n\n### snappy.uncompress(compressed, [options,] callback)\n\nUncompress `compressed` and call `callback` with `err` and `decompressed`.\n\n#### `options`\n\n* `'asBuffer'` *(boolean, default: `true`)*: Used to determine whether to return the `value` of the entry as a `String` or a Node.js `Buffer` object. Note that converting from a `Buffer` to a `String` incurs a cost so if you need a `String` (and the `value` can legitimately become a UFT8 string) then you should fetch it as one with `asBuffer: true` and you'll avoid this conversion cost.\n\nThe `callback` function will be called with a single `error` if the operation failed for any reason. If successful the first argument will be `null` and the second argument will be the `value` as a `String` or `Buffer` depending on the `asBuffer` option.\n\n### snappy.uncompressSync(compressed, [options])\n\nThe synchronous version of `snappy.uncompress`, returns the uncompressed value.\n\n### snappy.isValidCompressed(input, callback)\n\nCheck is input is a valid compressed `Buffer`.\n\nThe `callback` function will be called with a single `error` if the operation failed for any reason and the second argument will be `true` if input is a valid snappy compressed Buffer, `false` otherwise.\n\n### snappy.isValidCompressedSync(input)\n\nThe synchronous version of `snappy.isValidCompressed`, returns a boolean indicating if input was correctly compressed or not.\n\n### stream\n\nFor a streaming interface to snappy, please take a look at [snappy-stream](https://www.npmjs.org/package/snappy-stream)\n\n## [Benchmark](benchmark)\n\nThis is the result I'm seeing on my laptop (Macbook Air from 2012) running `node benchmark`\n\n```bash\n  snappy.compress() x 479 ops/sec ±0.99% (80 runs sampled)\n  zlib.gzip() x 289 ops/sec ±1.66% (86 runs sampled)\n  snappy.uncompress() x 652 ops/sec ±0.86% (43 runs sampled)\n  zlib.gunzip() x 559 ops/sec ±1.65% (64 runs sampled)\n```\n\n## License\n\nCopyright (c) 2011 - 2015 David Björklund & contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fkesla%2Fnode-snappy.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fkesla%2Fnode-snappy?ref=badge_large)",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/kesla/node-snappy.git"
  },
  "scripts": {
    "install": "prebuild-install || node-gyp rebuild",
    "prebuild": "prebuild --all --strip --verbose",
    "rebuild": "prebuild --compile",
    "test": "nyc ava test.js && semistandard | snazzy && prebuild-ci"
  },
  "version": "6.1.1"
}
